{"version":3,"file":"react-pdf.cjs.min.js","sources":["../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/formatter.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/jpeg.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/utils/styles.js","../src/elements/Base.js","../src/elements/SubPage.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/ignorableChars.js","../src/elements/TextEngine.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nconst Buffer = require('buffer/').Buffer;\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n    this.glyphs = {};\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    if (!this.glyphs[id]) {\n      this.glyphs[id] = this.src.font.characterToGlyph(id);\n    }\n\n    return {\n      id,\n      _font: this.src,\n      name: this.glyphs[id],\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fallbackFontInstance = null;\n    }\n\n    get fallbackFont() {\n      if (!this.fallbackFontInstance) {\n        this.fallbackFontInstance = new StandardFont('Helvetica');\n      }\n\n      return this.fallbackFontInstance;\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        let defaultFont;\n\n        if (typeof run.attributes.font === 'string') {\n          defaultFont = new StandardFont(run.attributes.font);\n        } else {\n          defaultFont = run.attributes.font;\n        }\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          let font = defaultFont;\n\n          // If the default font does not have a glyph\n          // and the fallback font does, we use it\n          if (\n            !defaultFont.hasGlyphForCodePoint(codePoint) &&\n            this.fallbackFont.hasGlyphForCodePoint(codePoint)\n          ) {\n            font = this.fallbackFont;\n          }\n\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, stretch, shrink) => ({\n  type: 'glue',\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\nimport linebreak from './linebreak';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst NO_BREAK_SPACE_DECIMAL = 160;\n\nconst getWords = glyphString => {\n  const words = [];\n  const { start } = glyphString;\n  let lastIndex = 0;\n\n  for (const { index } of glyphString) {\n    const codePoint = glyphString.codePointAtGlyphIndex(index);\n\n    // Not break words in no-break-spaces\n    if (codePoint === NO_BREAK_SPACE_DECIMAL) {\n      continue;\n    }\n\n    if (glyphString.isWhiteSpace(index - start)) {\n      const word = glyphString.slice(lastIndex, index - start);\n\n      if (word.length > 0) {\n        words.push(word);\n      }\n\n      lastIndex = index - start + 1;\n    }\n  }\n\n  if (lastIndex < glyphString.end) {\n    const word = glyphString.slice(\n      lastIndex,\n      glyphString.end - glyphString.start,\n    );\n    words.push(word);\n  }\n\n  return words;\n};\n\nconst h = new Hypher(english);\nconst hyphenateString = string => {\n  if (string.includes(SOFT_HYPHEN_HEX)) {\n    return string.split(SOFT_HYPHEN_HEX);\n  }\n\n  return h.hyphenate(string);\n};\n\nconst hyphenateWord = glyphString => {\n  const hyphenated = hyphenateString(glyphString.string);\n\n  let index = 0;\n  const parts = hyphenated.map(part => {\n    const res = glyphString.slice(index, index + part.length);\n    index += part.length;\n    return res;\n  });\n\n  return parts;\n};\n\nconst hyphenate = words => words.map(word => hyphenateWord(word));\n\nconst formatter = (measureText, textAlign, callback) => {\n  const spaceWidth = measureText(' ');\n  const hyphenWidth = measureText('-');\n  const hyphenPenalty = !textAlign || textAlign === 'justify' ? 100 : 600;\n  const opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9,\n  };\n\n  return glyphString => {\n    const nodes = [];\n    const words = getWords(glyphString);\n    const spaceStretch = spaceWidth * opts.width / opts.stretch;\n    const spaceShrink = spaceWidth * opts.width / opts.shrink;\n    const hyphenationCallback = callback || hyphenate;\n    const hyphenatedWords = hyphenationCallback(words, glyphString);\n\n    hyphenatedWords.forEach((word, index, array) => {\n      if (word.length > 1) {\n        word.forEach((part, partIndex, partArray) => {\n          const isLastPart = partIndex === word.length - 1;\n\n          nodes.push(linebreak.box(measureText(part), part, !isLastPart));\n\n          if (partIndex !== partArray.length - 1) {\n            nodes.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        });\n      } else {\n        nodes.push(linebreak.box(measureText(word[0]), word[0]));\n      }\n      if (index === array.length - 1) {\n        nodes.push(linebreak.glue(0, linebreak.infinity, 0));\n        nodes.push(linebreak.penalty(0, -linebreak.infinity, 1));\n      } else {\n        nodes.push(linebreak.glue(spaceWidth, spaceStretch, spaceShrink));\n      }\n    });\n\n    return nodes;\n  };\n};\n\nexport default formatter;\n","import createLinebreaker from '@textkit/linebreaker';\nimport formatter from './formatter';\nimport linebreak from './linebreak';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_LIMIT = 40;\n\nexport default ({ hyphenationCallback } = {}) => Textkit => {\n  const TextkitLinebreaker = createLinebreaker()(Textkit);\n  const fallbackLinebreaker = new TextkitLinebreaker();\n\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    suggestLineBreak(glyphString, width, paragraphStyle) {\n      let tolerance = this.tolerance;\n      const measuredWidth = this.measureWidth(glyphString);\n      const nodes = formatter(\n        measuredWidth,\n        paragraphStyle.align,\n        hyphenationCallback,\n      )(glyphString);\n      let breaks = [];\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        breaks = linebreak(nodes, [width], { tolerance });\n        tolerance += 2;\n      }\n\n      // Fallback to textkit default's linebreaking algorithm if K&P fails\n      if (breaks.length === 0) {\n        const fallback = fallbackLinebreaker.suggestLineBreak(\n          glyphString,\n          width,\n          paragraphStyle,\n        );\n        if (fallback) return fallback;\n\n        // If fallback didn't worked, we split workd based on width\n        const index = glyphString.glyphIndexAtOffset(width) - 1;\n        glyphString.insertGlyph(index, HYPHEN);\n        return { position: index + 1 };\n      }\n\n      if (!breaks[1]) {\n        return { position: glyphString.end };\n      }\n\n      const breakNode = this.findBreakNode(nodes, breaks[1].position);\n      const breakIndex = breakNode.value.end - glyphString.start;\n\n      if (breakNode.hyphenated) {\n        glyphString.insertGlyph(breakIndex, HYPHEN);\n        return { position: breakIndex + 1 };\n      }\n\n      // We kep the blank space at the end of the line to avoid justification issues\n      const offset = glyphString.isWhiteSpace(breakIndex) ? 1 : 0;\n      return { position: breakIndex + offset };\n    }\n\n    measureWidth(glyphString) {\n      const { font, fontSize } = glyphString.glyphRuns[0].attributes;\n\n      return word => {\n        if (typeof word === 'string') {\n          const scale = fontSize / font.unitsPerEm;\n          return font.layout(word).positions[0].xAdvance * scale;\n        }\n\n        return word.advanceWidth;\n      };\n    }\n\n    findBreakNode(nodes, position) {\n      let index = position - 1;\n\n      while (!nodes[index].value) {\n        index -= 1;\n      }\n\n      return nodes[index];\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport lineFragmentGenerator from '@textkit/line-fragment-generator';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      lineFragmentGenerator: lineFragmentGenerator(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      lineBreaker: lineBreaker({ hyphenationCallback }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport * from '@react-pdf/textkit-core';\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\n\nconst Buffer = require('buffer/').Buffer;\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nexport const fetchImage = src => {\n  if (typeof src === 'object') {\n    if (src.data && src.format) {\n      // Local file given\n      return new Promise((resolve, reject) =>\n        resolve(getImage(src.data, src.format)),\n      );\n    }\n    throw new Error(\n      `Invalid data given for local file: ${JSON.stringify(src)}`,\n    );\n  }\n\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => {\n      if (arrayBuffer.constructor.name === 'Buffer') {\n        return arrayBuffer;\n      }\n      return Buffer.from(arrayBuffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    })\n    .catch(() => {\n      throw new Error(`Couldn't fetch image: ${src}`);\n    });\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { fetchImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(fetchImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  get pageCount() {\n    return this.children.reduce((acc, page) => acc + page.subpagesCount, 0);\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    child.previousPage = this.children[this.children.length - 1];\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n\n    if (this.children[i + 1]) {\n      this.children[i + 1].previousPage = this.children[i].previousPage;\n    }\n\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) {\n      this.root.info.Title = title;\n    }\n    if (author) {\n      this.root.info.Author = author;\n    }\n    if (subject) {\n      this.root.info.Subject = subject;\n    }\n    if (keywords) {\n      this.root.info.Keywords = keywords;\n    }\n\n    this.root.info.Creator = creator || 'react-pdf';\n    this.root.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].applyProps();\n    }\n  }\n\n  async wrapChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].wrapPage();\n    }\n  }\n\n  async renderChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render();\n    }\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.wrapChildren();\n      await this.renderChildren();\n      this.root.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","import Yoga from 'yoga-layout';\n\nconst ALMOST_ZERO = 0.000001;\n\nclass Node {\n  constructor(root, props) {\n    this._top = null;\n    this._left = null;\n    this._width = null;\n    this._heigth = null;\n    this._padding = {};\n    this._margin = {};\n\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  get top() {\n    if (!this._top) {\n      this._top = this.layout.getComputedLayout().top - this.marginTop;\n    }\n\n    return this._top;\n  }\n\n  get left() {\n    if (!this._left) {\n      this._left = this.layout.getComputedLayout().left - this.marginLeft;\n    }\n\n    return this._left;\n  }\n\n  get width() {\n    if (!this._width) {\n      this._width =\n        this.layout.getComputedLayout().width +\n        this.marginLeft +\n        this.marginRight;\n    }\n\n    return this._width;\n  }\n\n  get height() {\n    if (!this._heigth) {\n      this._heigth =\n        this.layout.getComputedLayout().height +\n        this.marginTop +\n        this.marginBottom;\n    }\n\n    return this._heigth;\n  }\n\n  get paddingTop() {\n    if (!this._padding.top) {\n      this._padding.top = this.layout.getComputedPadding(Yoga.EDGE_TOP);\n    }\n\n    return this._padding.top;\n  }\n\n  get paddingRight() {\n    if (!this._padding.right) {\n      this._padding.right = this.layout.getComputedPadding(Yoga.EDGE_RIGHT);\n    }\n\n    return this._padding.right;\n  }\n\n  get paddingBottom() {\n    if (!this._padding.bottom) {\n      this._padding.bottom = this.layout.getComputedPadding(Yoga.EDGE_BOTTOM);\n    }\n\n    return this._padding.bottom;\n  }\n\n  get paddingLeft() {\n    if (!this._padding.left) {\n      this._padding.left = this.layout.getComputedPadding(Yoga.EDGE_LEFT);\n    }\n\n    return this._padding.left;\n  }\n\n  get marginTop() {\n    if (!this._margin.top) {\n      this._margin.top = this.layout.getComputedMargin(Yoga.EDGE_TOP);\n    }\n\n    return this._margin.top;\n  }\n\n  get marginRight() {\n    if (!this._margin.right) {\n      this._margin.right = this.layout.getComputedMargin(Yoga.EDGE_RIGHT);\n    }\n\n    return this._margin.right;\n  }\n\n  get marginBottom() {\n    if (!this._margin.bottom) {\n      this._margin.bottom = this.layout.getComputedMargin(Yoga.EDGE_BOTTOM);\n    }\n\n    return this._margin.bottom;\n  }\n\n  get marginLeft() {\n    if (!this._margin.left) {\n      this._margin.left = this.layout.getComputedMargin(Yoga.EDGE_LEFT);\n    }\n\n    return this._margin.left;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set top(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._top = value;\n  }\n\n  set left(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._left = value;\n  }\n\n  set width(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._width = value;\n  }\n\n  set height(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._heigth = value;\n  }\n\n  set paddingTop(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.top = value;\n  }\n\n  set paddingRight(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.right = value;\n  }\n\n  set paddingBottom(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.bottom = value;\n  }\n\n  set paddingLeft(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.left = value;\n  }\n\n  set marginTop(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.top = value;\n  }\n\n  set marginRight(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.right = value;\n  }\n\n  set marginBottom(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.bottom = value;\n  }\n\n  set marginLeft(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.left = value;\n  }\n\n  set padding(value) {\n    this._padding = value;\n  }\n\n  set margin(value) {\n    this._margin = value;\n  }\n\n  reset() {\n    this.top = null;\n    this.left = null;\n    this.width = null;\n    this.height = null;\n    this.padding = {};\n    this.margin = {};\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","import yogaValue from './yogaValue';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value => value.match(/(\\d+)px?\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = style => {\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (typeof value === 'string' && key.match(/border/)) {\n      const match = matchBorderShorthand(value);\n\n      if (match) {\n        if (key.match(/.Color/)) {\n          resolvedStyle[key] = match[3];\n        } else if (key.match(/.Style/)) {\n          resolvedStyle[key] = match[2];\n        } else if (key.match(/.Width/)) {\n          resolvedStyle[key] = match[1];\n        } else {\n          throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n        }\n      } else {\n        resolvedStyle[key] = value;\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  return processBorders(expandStyles(style));\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null || style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) {\n    return null;\n  }\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n\n  return transformStyles(styles);\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debugText(layout) {\n    this.root.fontSize(4);\n    this.root.opacity(1);\n    this.root.fillColor('black');\n    this.root.text(\n      `${layout.width} x ${layout.height}`,\n      layout.left,\n      Math.max(layout.top - 4, 0),\n    );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.fillColor('#a1c6e7');\n    this.root.opacity(0.5);\n    this.root\n      .rect(\n        layout.left + padding.left + margin.left,\n        layout.top + padding.top + margin.top,\n        layout.width -\n          padding.left -\n          padding.right -\n          margin.left -\n          margin.right,\n        layout.height -\n          padding.top -\n          padding.bottom -\n          margin.top -\n          margin.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.fillColor('#c4deb9');\n    this.root.opacity(0.5);\n\n    // Padding top\n    this.root\n      .rect(\n        layout.left + margin.left + padding.left,\n        layout.top + margin.top,\n        layout.width -\n          padding.right -\n          padding.left -\n          margin.left -\n          margin.right,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top + margin.top,\n        padding.left,\n        layout.height - margin.top - margin.bottom,\n      )\n      .fill();\n\n    // Padding right\n    this.root\n      .rect(\n        layout.left + layout.width - padding.right - margin.right,\n        layout.top + margin.top,\n        padding.right,\n        layout.height - margin.top - margin.bottom,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root\n      .rect(\n        layout.left + padding.left + margin.left,\n        layout.top + layout.height - padding.bottom - margin.bottom,\n        layout.width -\n          padding.right -\n          padding.left -\n          margin.left -\n          margin.right,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.fillColor('#f8cca1');\n    this.root.opacity(0.5);\n\n    // Margin top\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top,\n        layout.width - margin.left - margin.right,\n        margin.top,\n      )\n      .fill();\n\n    // Margin left\n    this.root.rect(layout.left, layout.top, margin.left, layout.height).fill();\n\n    // Margin right\n    this.root\n      .rect(\n        layout.left + layout.width - margin.right,\n        layout.top,\n        margin.right,\n        layout.height,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top + layout.height - margin.bottom,\n        layout.width - margin.left - margin.right,\n        margin.bottom,\n      )\n      .fill();\n  },\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout);\n\n    this.root.restore();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawBorders() {\n    const margin = this.margin;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + margin.left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + margin.top + borderTopWidth / 2,\n      ],\n      [\n        left +\n          width -\n          margin.right -\n          (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + margin.top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - margin.right - borderRightWidth / 2,\n        top +\n          margin.top +\n          (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - margin.right - borderRightWidth / 2,\n        top +\n          height -\n          margin.bottom -\n          (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          margin.right -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - margin.bottom - borderBottomWidth / 2,\n      ],\n      [\n        left +\n          margin.left +\n          (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - margin.bottom - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + margin.left + borderLeftWidth / 2,\n        top +\n          height -\n          margin.bottom -\n          (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + margin.left + borderLeftWidth / 2,\n        top + margin.top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.restore();\n  },\n};\n\nexport default Borders;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import Yoga from 'yoga-layout';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport upperFirst from 'lodash.upperfirst';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport { inheritedProperties } from '../utils/styles';\n\nconst PERCENT = /^(\\d+)?%$/g;\n\nclass Base extends Node {\n  static defaultProps = {\n    style: {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n    minPresenceAhead: 0,\n  };\n\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.parent = null;\n    this.children = [];\n\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n\n    this.layout = Yoga.Node.createDefault();\n    this.canBeSplitted = false;\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  moveTo(parent) {\n    this.reset();\n    this.parent.removeChild(this);\n    parent.appendChild(this);\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style =\n      this.style ||\n      StyleSheet.resolve(this.props.style, {\n        width: size[0],\n        height: size[1],\n        orientation: orientation,\n      });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseInt(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n        this.layout.setMargin(Yoga.EDGE_TOP, this.marginTop || value);\n        break;\n      case 'marginRight':\n        this.layout.setMargin(Yoga.EDGE_RIGHT, this.marginRight || value);\n        break;\n      case 'marginBottom':\n        this.layout.setMargin(Yoga.EDGE_BOTTOM, this.marginBottom || value);\n        break;\n      case 'marginLeft':\n        this.layout.setMargin(Yoga.EDGE_LEFT, this.marginLeft || value);\n        break;\n      case 'paddingTop':\n        this.layout.setPadding(Yoga.EDGE_TOP, this.paddingTop || value);\n        break;\n      case 'paddingRight':\n        this.layout.setPadding(Yoga.EDGE_RIGHT, this.paddingRight || value);\n        break;\n      case 'paddingBottom':\n        this.layout.setPadding(Yoga.EDGE_BOTTOM, this.paddingBottom || value);\n        break;\n      case 'paddingLeft':\n        this.layout.setPadding(Yoga.EDGE_LEFT, this.paddingLeft || value);\n        break;\n      case 'borderTopWidth':\n        this.layout.setBorder(Yoga.EDGE_TOP, value);\n        break;\n      case 'borderRightWidth':\n        this.layout.setBorder(Yoga.EDGE_RIGHT, value);\n        break;\n      case 'borderBottomWidth':\n        this.layout.setBorder(Yoga.EDGE_BOTTOM, value);\n        break;\n      case 'borderLeftWidth':\n        this.layout.setBorder(Yoga.EDGE_LEFT, value);\n        break;\n      case 'position':\n        this.layout.setPositionType(\n          value === 'absolute'\n            ? Yoga.POSITION_TYPE_ABSOLUTE\n            : Yoga.POSITION_TYPE_RELATIVE,\n        );\n        break;\n      case 'top':\n        this.setPosition(Yoga.EDGE_TOP, this.top || value);\n        break;\n      case 'right':\n        this.setPosition(Yoga.EDGE_RIGHT, this.right || value);\n        break;\n      case 'bottom':\n        this.setPosition(Yoga.EDGE_BOTTOM, this.bottom || value);\n        break;\n      case 'left':\n        this.setPosition(Yoga.EDGE_LEFT, this.left || value);\n        break;\n      case 'width':\n        this.setDimension(\n          attribute,\n          this[attribute] - this.marginLeft - this.marginRight || value,\n        );\n        break;\n      case 'height':\n        this.setDimension(\n          attribute,\n          this[attribute] - this.marginTop - this.marginBottom || value,\n        );\n        break;\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this.setDimension(attribute, value);\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  isAbsolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  recalculateLayout() {\n    this.children.forEach(child => child.recalculateLayout());\n  }\n\n  getAbsoluteLayout() {\n    const parentMargin = this.parent.margin || { left: 0, top: 0 };\n    const parentLayout = this.parent.getAbsoluteLayout\n      ? this.parent.getAbsoluteLayout()\n      : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentMargin.left + parentLayout.left,\n      top: this.top + parentMargin.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  getWidth() {\n    return (\n      this.layout.getComputedWidth() +\n      this.layout.getComputedMargin(Yoga.EDGE_LEFT) +\n      this.layout.getComputedMargin(Yoga.EDGE_RIGTH) -\n      this.layout.getComputedPadding(Yoga.EDGE_LEFT) -\n      this.layout.getComputedPadding(Yoga.EDGE_RIGTH)\n    );\n  }\n\n  getHeight() {\n    return (\n      this.layout.getComputedHeight() +\n      this.layout.getComputedMargin(Yoga.EDGE_TOP) +\n      this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) -\n      this.layout.getComputedPadding(Yoga.EDGE_TOP) -\n      this.layout.getComputedPadding(Yoga.EDGE_BOTTOM)\n    );\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const margin = this.margin;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root\n        .fillColor(styles.backgroundColor)\n        .roundedRect(\n          left + margin.left,\n          top + margin.top,\n          width - margin.left - margin.right,\n          height - margin.top - margin.bottom,\n          borderRadius,\n        )\n        .fill();\n    }\n  }\n\n  wrapHeight(height) {\n    return Math.min(height, this.height);\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.width = this.width;\n    clone.style = this.style;\n    clone.parent = this.parent;\n    clone.height = this.height;\n    clone.margin = this.margin;\n    clone.padding = this.padding;\n\n    return clone;\n  }\n\n  async renderChildren(page) {\n    const absoluteChilds = this.children.filter(child => child.isAbsolute());\n    const nonAbsoluteChilds = this.children.filter(\n      child => !child.isAbsolute(),\n    );\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render(page);\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render(page);\n    }\n  }\n}\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\n\nexport default Base;\n","import warning from 'fbjs/lib/warning';\nimport Base from './Base';\n\nclass SubPage extends Base {\n  constructor(root, props, number) {\n    super(root, props);\n\n    this._number = number;\n  }\n\n  get name() {\n    return 'SubPage';\n  }\n\n  get page() {\n    return this.parent;\n  }\n\n  get size() {\n    return this.parent.size;\n  }\n\n  get style() {\n    return this.parent.style;\n  }\n\n  set style(style) {\n    return style;\n  }\n\n  get number() {\n    return this._number + this.page.numberOffset;\n  }\n\n  resetMargins() {\n    if (\n      !!this.style.marginTop ||\n      !!this.style.marginBottom ||\n      !!this.style.marginLeft ||\n      !!this.style.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.style.marginTop = 0;\n      this.style.marginBottom = 0;\n      this.style.marginLeft = 0;\n      this.style.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.resetMargins();\n\n    if (this.props.size) {\n      const size = this.size;\n\n      if (this.props.orientation === 'landscape') {\n        this.layout.setWidth(size[1]);\n        this.layout.setHeight(size[0]);\n      } else {\n        this.layout.setWidth(size[0]);\n        this.layout.setHeight(size[1]);\n      }\n    }\n  }\n\n  recalculateLayout() {\n    super.recalculateLayout();\n    this.layout.calculateLayout();\n  }\n\n  isEmpty() {\n    const nonFixedChilds = this.children.filter(child => !child.props.fixed);\n    if (nonFixedChilds.length === 0) {\n      return true;\n    }\n\n    return nonFixedChilds.every(child => child.isEmpty());\n  }\n\n  wrap(height) {\n    this.layout.calculateLayout();\n\n    const nextPageElements = [];\n    const result = this.clone();\n\n    result._number = this._number + 1;\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      const { fixed, wrap, minPresenceAhead } = child.props;\n\n      const isElementOutside = height < child.top;\n      const childBottom = child.top + child.height - this.paddingTop;\n      const shouldElementSplit = height < childBottom;\n\n      if (fixed) {\n        const fixedElement = child.clone();\n        fixedElement.children = child.children;\n        result.appendChild(fixedElement);\n      } else if (isElementOutside) {\n        nextPageElements.push(child);\n      } else if (child.props.break) {\n        child.props.break = false;\n        nextPageElements.push(...this.children.slice(i));\n        break;\n      } else if (minPresenceAhead) {\n        let childIndex = 1;\n        let presenceAhead = 0;\n        let nextChild = this.children[i + childIndex];\n        let isElementInside = height > nextChild.top;\n\n        while (nextChild && isElementInside) {\n          isElementInside = height > nextChild.top;\n          presenceAhead += nextChild.wrapHeight(\n            height - nextChild.top - this.marginTop,\n          );\n          nextChild = this.children[i + childIndex++];\n        }\n\n        if (presenceAhead < minPresenceAhead) {\n          nextPageElements.push(...this.children.slice(i));\n          break;\n        }\n      } else if (shouldElementSplit) {\n        const remainingHeight = height - child.top + this.paddingTop;\n\n        if (!wrap) {\n          nextPageElements.push(child);\n        } else {\n          result.appendChild(child.splice(remainingHeight, height));\n        }\n      }\n    }\n\n    nextPageElements.forEach(child => child.moveTo(result));\n    result.applyProps();\n\n    return result;\n  }\n\n  callChildFunctions() {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const { pageCount } = this.page.document;\n\n      if (node.renderCallback) {\n        const callResult = node.renderCallback({\n          totalPages: pageCount,\n          pageNumber: this.number,\n        });\n\n        node.renderCallback = null;\n        node.children = [callResult];\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  layoutFixedElements() {\n    this.reset();\n    this.recalculateLayout();\n\n    this.children.forEach(child => {\n      if (child.props.fixed) {\n        child.reset();\n      }\n    });\n  }\n\n  async render(page) {\n    this.root.addPage({\n      size: this.size,\n      layout: this.props.orientation,\n      margin: 0,\n    });\n\n    this.callChildFunctions();\n    this.layoutFixedElements();\n\n    if (this.style.backgroundColor) {\n      this.root\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.root.page.width, this.root.page.height)\n        .fill();\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    await this.renderChildren(page);\n\n    this.page.renderRuler();\n  }\n}\n\nexport default SubPage;\n","export default {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    this.root\n      .save()\n      .lineWidth(LINE_WIDTH)\n      .fontSize(RULER_FONT_SIZE)\n      .opacity(1);\n\n    if (this.hasHorizontalRuler()) {\n      this.drawHorizontalRuler();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.drawVerticalRuler();\n    }\n\n    if (this.hasHorizontalRuler() && this.hasVerticalRuler()) {\n      this.root\n        .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n        .fill(RULER_COLOR);\n    }\n\n    this.root.restore();\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import SubPage from './SubPage';\nimport StyleSheet from '../stylesheet';\nimport sizes from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\n\nclass Page {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: false,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.parent = null;\n    this.props = { ...Page.defaultProps, ...props };\n    this.previousPage = null;\n    this.children = [];\n    this._size = null;\n\n    this.addInitialSubpage();\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get initialSubpage() {\n    return this.children[0];\n  }\n\n  get subpagesCount() {\n    return this.children.length;\n  }\n\n  get numberOffset() {\n    let result = 0;\n    let page = this.previousPage;\n\n    while (page) {\n      result += page.subpagesCount;\n      page = page.previousPage;\n    }\n\n    return result;\n  }\n\n  get width() {\n    return this.size[0];\n  }\n\n  get height() {\n    return this.size[1];\n  }\n\n  get padding() {\n    return {\n      top: this.style.paddingTop || 0,\n      right: this.style.paddingRight || 0,\n      bottom: this.style.paddingBottom || 0,\n      left: this.style.paddingLeft || 0,\n    };\n  }\n\n  get size() {\n    if (this._size) {\n      return this._size;\n    }\n\n    const { size } = this.props;\n\n    // Calculate size\n    if (typeof size === 'string') {\n      this._size = sizes[size.toUpperCase()];\n    } else if (Array.isArray(size)) {\n      this._size = size;\n    } else if (typeof size === 'object' && size.width && size.height) {\n      this._size = [size.width, size.height];\n    } else {\n      throw new Error(`Invalid Page size: ${size}`);\n    }\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size[0] += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size[1] += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  applyProps() {\n    this.style = StyleSheet.resolve(this.props.style);\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n    const { paddingTop = 0, paddingLeft = 0 } = this.style;\n\n    if (this.hasHorizontalRuler()) {\n      this.style.paddingTop = paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.style.paddingLeft = paddingLeft + rulerWidth;\n    }\n\n    // Apply props to page childrens\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].applyProps();\n    }\n  }\n\n  addInitialSubpage() {\n    const newSubpage = new SubPage(this.root, this.props, 1);\n    newSubpage.parent = this;\n\n    this.children.push(newSubpage);\n  }\n\n  appendChild(child) {\n    this.children[0].appendChild(child);\n  }\n\n  removeChild(child) {\n    this.children[0].removeChild(child);\n  }\n\n  async wrapPage() {\n    const { paddingTop = 0, paddingBottom = 0 } = this.style;\n    const height = this.height - paddingTop - paddingBottom;\n    let nextSubpage = this.initialSubpage.wrap(height);\n\n    while (this.props.wrap && !nextSubpage.isEmpty()) {\n      this.children.push(nextSubpage);\n      nextSubpage = nextSubpage.wrap(height);\n    }\n  }\n\n  async render() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render(this);\n    }\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  isEmpty() {\n    if (this.children.length === 0) {\n      return false;\n    }\n\n    return this.children.every(child => child.isEmpty());\n  }\n\n  wrapHeight(height) {\n    const { wrap } = this.props;\n\n    if (!wrap && height < this.height) {\n      return 0;\n    }\n\n    let result = 0;\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children.height > height) {\n        break;\n      }\n\n      result += this.children.height;\n    }\n    return result;\n  }\n\n  splice(wrapHeight, pageHeight) {\n    const nextViewElements = [];\n    const result = this.clone();\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      const { fixed, wrap, minPresenceAhead } = child.props;\n      const isElementOutside = wrapHeight < child.top;\n      const shouldElementSplit = wrapHeight < child.top + child.height;\n\n      if (isElementOutside) {\n        nextViewElements.push(child);\n      } else if (fixed) {\n        const fixedElement = child.clone();\n        fixedElement.children = child.children;\n        result.appendChild(fixedElement);\n      } else if (child.props.break) {\n        child.props.break = false;\n        nextViewElements.push(...this.children.slice(i));\n        break;\n      } else if (minPresenceAhead) {\n        let childIndex = 1;\n        let presenceAhead = 0;\n        let nextChild = this.children[i + childIndex];\n        let isElementInside = wrapHeight > nextChild.top;\n\n        while (nextChild && isElementInside) {\n          isElementInside = wrapHeight > nextChild.top;\n          presenceAhead += nextChild.wrapHeight(\n            wrapHeight - nextChild.top - this.marginTop,\n          );\n          nextChild = this.children[i + childIndex++];\n        }\n\n        if (presenceAhead < minPresenceAhead) {\n          nextViewElements.push(...this.children.slice(i));\n          break;\n        }\n      } else if (shouldElementSplit) {\n        const remainingHeight = wrapHeight - child.top - this.marginTop;\n\n        if (!wrap) {\n          nextViewElements.push(child);\n        } else {\n          result.appendChild(child.splice(remainingHeight, pageHeight));\n        }\n      }\n    }\n\n    nextViewElements.forEach(child => child.moveTo(result));\n\n    // If the View has fixed height, we calculate the new element heights.\n    // If not, we set it up as NaN and use Yoga calculated heights as fallback.\n    const h = this.style.height ? wrapHeight : NaN;\n\n    result.marginTop = 0;\n    result.paddingTop = 0;\n    result.height = this.height - h;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.height = h;\n\n    return result;\n  }\n\n  async render(page) {\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    await this.renderChildren(page);\n  }\n}\n\nexport default View;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import warning from 'fbjs/lib/warning';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport upperFirst from 'lodash.upperfirst';\nimport { embedEmojis } from '../utils/emoji';\nimport { ignoreChars } from '../utils/ignorableChars';\nimport Font from '../font';\nimport {\n  Rect,\n  Path,\n  LayoutEngine,\n  AttributedString,\n  Container,\n} from '../layout';\n\n// Global layout engine\n// It's created dynamically because it may accept a custom hyphenation callback\nlet LAYOUT_ENGINE;\nconst INFINITY = 99999;\n\n// TODO: Import and pass Textkit as a whole\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass TextEngine {\n  constructor(element) {\n    this.element = element;\n    this._container = null;\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this.preprocessors = [ignoreChars, embedEmojis];\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get layoutEngine() {\n    if (!LAYOUT_ENGINE) {\n      LAYOUT_ENGINE = new LayoutEngine({\n        hyphenationCallback: Font.getHyphenationCallback(),\n      });\n    }\n\n    return LAYOUT_ENGINE;\n  }\n\n  get lines() {\n    if (!this.container) {\n      return [];\n    }\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get height() {\n    if (!this._container) {\n      return -1;\n    }\n\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get width() {\n    if (!this._container) {\n      return -1;\n    }\n\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get attributedString() {\n    let fragments = [];\n    const {\n      color = 'black',\n      fontFamily = 'Helvetica',\n      fontSize = 18,\n      textAlign = 'left',\n      position,\n      top,\n      bottom,\n      align,\n      lineHeight,\n      textDecoration,\n      textDecorationColor,\n      textDecorationStyle,\n      textTransform,\n    } = this.element.getComputedStyles();\n\n    warning(\n      !align,\n      '\"align\" style prop will be deprecated on future versions. Please use \"textAlign\" instead in Text node',\n    );\n\n    this.element.children.forEach(child => {\n      if (typeof child === 'string') {\n        const obj = Font.getFont(fontFamily);\n        const font = obj ? obj.data : fontFamily;\n        const string = this.transformText(child, textTransform);\n\n        fragments.push({\n          string,\n          attributes: {\n            font,\n            color,\n            fontSize,\n            align: textAlign,\n            link: this.element.src,\n            underlineStyle: textDecorationStyle,\n            underline: textDecoration === 'underline',\n            underlineColor: textDecorationColor || color,\n            lineHeight: lineHeight ? lineHeight * fontSize : null,\n            yOffset: position === 'relative' ? -top || bottom || 0 : null,\n          },\n        });\n      } else {\n        if (child.engine) {\n          fragments.push(...child.engine.attributedString);\n        }\n      }\n    });\n\n    for (const preprocessor of this.preprocessors) {\n      fragments = preprocessor(fragments);\n    }\n\n    return fragments;\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i <= index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  splice(height) {\n    const result = this.clone();\n    const index = this.lineIndexAtHeight(height);\n\n    result.start = index;\n    result.end = this.end;\n    this.end = index;\n\n    return result;\n  }\n\n  clone() {\n    const result = new TextEngine(this.element);\n    result.computed = this.computed;\n    result._container = this._container;\n    return result;\n  }\n\n  transformText(text, transformation) {\n    switch (transformation) {\n      case 'uppercase':\n        return text.toUpperCase();\n      case 'lowercase':\n        return text.toLowerCase();\n      case 'capitalize':\n        return upperFirst(text);\n      default:\n        return text;\n    }\n  }\n\n  layout(width, dirty) {\n    if (this.computed) return;\n    const path = new Path().rect(0, 0, width, INFINITY);\n    const container = new Container(path);\n    const string = AttributedString.fromFragments(this.attributedString).trim();\n\n    // Do the actual text layout\n    this.layoutEngine.layout(string, [container]);\n\n    // Get the total amount of rendered lines\n    const linesCount = container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this._container = container;\n    this.end = linesCount + 1;\n  }\n\n  render() {\n    const margin = this.element.margin;\n    const padding = this.element.padding;\n    const { top, left } = this.element.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + margin.left + padding.left;\n      line.rect.y += top + margin.top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.element.root, {\n      outlineLines: false,\n    });\n    renderer.render(this.container);\n  }\n}\n\nexport default TextEngine;\n","import Yoga from 'yoga-layout';\nimport Base from './Base';\nimport TextEngine from './TextEngine';\n\nconst WIDOW_THREASHOLD = 20;\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.engine = new TextEngine(this);\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n    this.renderCallback = props.render;\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return null;\n  }\n\n  appendChild(child) {\n    if (typeof child === 'string') {\n      this.children.push(child);\n    } else {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    this.children = null;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    // If the text has functions inside, we don't measure dimentions right away,\n    // but we keep this until all functions are resolved after the layout stage.\n    if (this.renderCallback) {\n      return {};\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.engine.layout(width);\n\n      return {\n        height: this.style.flexGrow ? NaN : this.engine.height,\n      };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.engine.layout(width);\n\n      return {\n        height: this.engine.height,\n        width: Math.min(width, this.engine.width),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // For Text, we also inherit relative positioning because this is how\n    // we define text yOffset, which should be applied for inline childs also\n    if (\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    return styles;\n  }\n\n  recalculateLayout() {\n    this.layout.markDirty();\n  }\n\n  isEmpty() {\n    return this.engine.lines.length === 0;\n  }\n\n  hasOrphans(linesQuantity, slicedLines) {\n    return slicedLines === 1 && linesQuantity !== 1;\n  }\n\n  hasWidows(linesQuantity, slicedLines) {\n    return (\n      linesQuantity !== 1 &&\n      linesQuantity - slicedLines === 1 &&\n      linesQuantity < WIDOW_THREASHOLD\n    );\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.engine.lines.length;\n    const sliceHeight = height - this.marginTop - this.paddingTop;\n    const slicedLines = this.engine.lineIndexAtHeight(sliceHeight);\n\n    let wrapHeight = height;\n\n    if (linesQuantity < orphans) {\n      wrapHeight = height;\n    } else if (slicedLines < orphans || linesQuantity < orphans + widows) {\n      wrapHeight = 0;\n    } else if (linesQuantity === orphans + widows) {\n      wrapHeight = this.engine.heightAtLineIndex(orphans - 1);\n    } else if (linesQuantity - slicedLines < widows) {\n      wrapHeight = height - this.engine.heightAtLineIndex(widows - 1);\n    }\n\n    return Math.min(wrapHeight, this.height);\n  }\n\n  splice(height) {\n    const wrapHeight = this.wrapHeight(height);\n    const engine = this.engine.splice(wrapHeight);\n    const result = this.clone();\n\n    result.marginTop = 0;\n    result.paddingTop = 0;\n    result.width = this.width;\n    result.marginBottom = this.marginBottom;\n    result.engine = engine;\n    result.engine.element = result;\n    result.height = engine.height + this.paddingBottom + this.marginBottom;\n\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.height = height;\n\n    return result;\n  }\n\n  async render(page) {\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.engine.computed) {\n      this.engine.layout(\n        this.width -\n          this.margin.left -\n          this.margin.right -\n          this.padding.left -\n          this.padding.right,\n      );\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.engine.render();\n  }\n}\n\nexport default Text;\n","import Text from './Text';\n\nconst PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nclass Link extends Text {\n  static defaultProps = {\n    style: {\n      color: 'blue',\n      textDecoration: 'underline',\n    },\n  };\n\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    let { src } = this.props;\n\n    if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n      src = `http://${src}`;\n    }\n\n    return src;\n  }\n}\n\nexport default Link;\n","import Yoga from 'yoga-layout';\nimport Base from './Base';\nimport { fetchImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  isEmpty() {\n    return false;\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await fetchImage(this.props.src);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  async render() {\n    const margin = this.margin;\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const containerWidth = this.width - margin.right - margin.left;\n      const containerHeight = this.height - margin.top - margin.bottom;\n      const imageWidth = Math.min(containerHeight * this.ratio, containerWidth);\n      const xOffset = Math.max((containerWidth - imageWidth) / 2, 0);\n\n      this.root.image(\n        this.image.data,\n        left + padding.left + margin.left + xOffset,\n        top + padding.top + margin.top,\n        {\n          width: imageWidth - padding.left - padding.right,\n          height: containerHeight - padding.top - padding.bottom,\n        },\n      );\n    }\n  }\n}\n\nexport default Image;\n","import PDFDocument from '@react-pdf/pdfkit';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Image from './Image';\n\nfunction createElement(type, props, root) {\n  let instance;\n\n  switch (type) {\n    case 'ROOT':\n      instance = new PDFDocument({ autoFirstPage: false });\n      break;\n    case 'DOCUMENT':\n      instance = new Document(root, props);\n      break;\n    case 'PAGE':\n      instance = new Page(root, props);\n      break;\n    case 'TEXT':\n      instance = new Text(root, props);\n      break;\n    case 'LINK':\n      instance = new Link(root, props);\n      break;\n    case 'IMAGE':\n      instance = new Image(root, props);\n      break;\n    case 'VIEW':\n      instance = new View(root, props);\n      break;\n    default:\n      instance = undefined;\n  }\n\n  return instance;\n}\n\nexport { createElement };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createElement } from './elements';\n\nconst PDFRenderer = ReactFiberReconciler({\n  appendInitialChild(parentInstance, child) {\n    if (parentInstance.appendChild) {\n      parentInstance.appendChild(child);\n    } else {\n      parentInstance.document = child;\n    }\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    return createElement(type, props, internalInstanceHandle);\n  },\n\n  createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    return text;\n  },\n\n  finalizeInitialChildren(domElement, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(domElement, type, oldProps, newProps) {\n    return true;\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(domElement) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: () => {},\n\n  useSyncScheduling: true,\n\n  mutation: {\n    appendChild(parentInstance, child) {\n      if (parentInstance.appendChild) {\n        parentInstance.appendChild(child);\n      } else {\n        parentInstance.document = child;\n      }\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.appendChild) {\n        parentInstance.appendChild(child);\n      } else {\n        parentInstance.document = child;\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      // noob\n    },\n\n    insertInContainerBefore(parentInstance, child, beforeChild) {\n      // noob\n    },\n\n    removeChild(parentInstance, child) {\n      parentInstance.removeChild(child);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      if (parentInstance.removeChild) {\n        parentInstance.removeChild(child);\n      }\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance = newText;\n    },\n\n    commitMount(instance, type, newProps) {\n      // Noop\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      // noop\n    },\n  },\n});\n\nexport default PDFRenderer;\n","import PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createElement } from './elements';\nimport Font from './font';\nimport BlobStream from 'blob-stream';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  async function toBlob() {\n    await input.document.render();\n\n    const stream = input.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        const blob = stream.toBlob('application/pdf');\n\n        if (input.document.props.onRender) {\n          input.document.props.onRender({ blob });\n        }\n\n        resolve(blob);\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    await input.document.render();\n\n    if (input.document.props.onRender) {\n      input.document.props.onRender();\n    }\n\n    return input;\n  }\n\n  async function toString() {\n    let result = '';\n    const render = input.document.render();\n\n    return new Promise(resolve => {\n      render.on('data', function(buffer) {\n        result += buffer;\n      });\n\n      render.on('end', function() {\n        if (input.document.props.onRender) {\n          input.document.props.onRender({ string: result });\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n  return {\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  Document,\n  StyleSheet,\n  createElement,\n  pdf,\n};\n","import fs from 'fs';\nimport path from 'path';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createElement,\n} from './index';\n\nexport * from './index';\n\nconst renderToStream = async function(element) {\n  const container = createElement('ROOT');\n  const node = PDFRenderer.createContainer(container);\n\n  PDFRenderer.updateContainer(element, node, null);\n\n  return pdf(container).toBuffer();\n};\n\nconst renderToFile = async function(element, filePath, callback) {\n  const output = await renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n  output.pipe(stream);\n\n  await new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) {\n        callback(output, filePath);\n      }\n      resolve(output);\n\n      console.log(`📝  PDF successfully exported on ${path.resolve(filePath)}`);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst render = function(element, filePath, callback) {\n  return renderToFile(element, filePath, callback);\n};\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createElement,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["fetchFont","src","fetch","then","response","buffer","arrayBuffer","Buffer","from","emojiSource","hyphenationCallback","fonts","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","async","fontFamily","doc","font","data","loading","isUrl","fontkit","create","openSync","loaded","registerFont","standardFonts","includes","Error","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","open","glyphs","str","encoded","positions","this","encode","map","_","i","g","glyph","getGlyph","parseInt","advanceWidth","codePoint","id","characterToGlyph","ascender","descender","lineGap","Run","fallbackFontInstance","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","char","slice","start","end","codePointAt","hasGlyphForCodePoint","fallbackFont","Node","prev","next","toString","LinkedList","head","tail","listSize","node","isEmpty","last","toArray","result","fun","n","isLinked","listLength","newNode","unshift","insertAfter","insertBefore","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","first","candidates","currentClass","remove","Math","pow","abs","undefined","forEach","size","reverse","glue","box","value","hyphenated","SOFT_HYPHEN_HEX","NO_BREAK_SPACE_DECIMAL","getWords","glyphString","words","codePointAtGlyphIndex","isWhiteSpace","word","h","Hypher","english","hyphenateString","split","hyphenate","hyphenateWord","part","formatter","measureText","textAlign","spaceWidth","hyphenWidth","hyphenPenalty","opts","spaceStretch","spaceShrink","array","partIndex","partArray","isLastPart","HYPHEN","TOLERANCE_LIMIT","Textkit","fallbackLinebreaker","createLinebreaker","paragraphStyle","measuredWidth","measureWidth","align","fallback","suggestLineBreak","glyphIndexAtOffset","insertGlyph","breakNode","findBreakNode","breakIndex","fontSize","glyphRuns","scale","unitsPerEm","layout","xAdvance","shrinkWhitespaceFactor","before","after","LayoutEngine","BaseLayoutEngine","scriptItemizer","textDecorationEngine","lineFragmentGenerator","fontSubstitutionEngine","lineBreaker","justificationEngine","MARKERS","JPEG","height","readUInt16BE","marker","pos","require","getImage","body","extension","toLowerCase","PNG","fetchImage","resolve","reject","_JSON$stringify","constructor","isPng","isJpg","catch","emojis","regex","emojiRegex","reflect","promise","args","v","e","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","emoji","Font","fetchEmojis","promises","match","exec","emojiUrl","image","embedEmojis","fragments","fragment","emojiSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","reduce","acc","page","subpagesCount","child","parent","previousPage","indexOf","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","listToExplore","shift","style","childNode","_Promise","all","loadFonts","loadImages","applyProps","wrapPage","render","addMetaData","loadEmojis","loadAssets","wrapChildren","renderChildren","defaultProps","ALMOST_ZERO","_top","_left","_width","_heigth","_padding","_margin","Yoga","createDefault","getComputedLayout","top","marginTop","left","marginLeft","marginRight","marginBottom","getComputedPadding","EDGE_TOP","right","EDGE_RIGHT","bottom","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","paddingTop","paddingRight","paddingBottom","paddingLeft","padding","margin","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","key","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","styles","flatten","input","Array","isArray","resolveMediaQueries","container","test","matchMedia","[object Object]","absoluteFillObject","Debug","opacity","fillColor","text","max","rect","fill","getAbsoluteLayout","save","debugContent","debugPadding","debugMargin","debugText","restore","Borders","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","getComputedStyles","drawHorizontalBorder","drawVerticalBorder","inheritedProperties","PERCENT","Base","merge","canBeSplitted","insertChild","getChildCount","splice","removeChild","appendChild","orientation","StyleSheet","attribute","applyStyle","attr","fixedMethod","upperFirst","percentMethod","isPercent","edge","setPositionPercent","setPosition","setter","setMargin","setPadding","setBorder","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","setDimension","isFunction","recalculateLayout","parentMargin","parentLayout","getComputedWidth","EDGE_RIGTH","getComputedHeight","element","inheritedStyles","pick","borderRadius","backgroundColor","roundedRect","min","clone","absoluteChilds","filter","isAbsolute","nonAbsoluteChilds","_Object$assign","SubPage","number","_number","numberOffset","resetMargins","setWidth","setHeight","calculateLayout","nonFixedChilds","fixed","every","nextPageElements","wrap","minPresenceAhead","isElementOutside","shouldElementSplit","fixedElement","break","childIndex","presenceAhead","nextChild","isElementInside","wrapHeight","remainingHeight","pageCount","document","renderCallback","callResult","addPage","callChildFunctions","layoutFixedElements","debug","renderRuler","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","parseFloat","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","round","vRange","getVerticalSteps","Page","_size","addInitialSubpage","sizes","toUpperCase","getRulerWidth","rulerWidth","newSubpage","nextSubpage","initialSubpage","View","pageHeight","nextViewElements","NaN","drawBackgroundColor","drawBorders","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","LAYOUT_ENGINE","INFINITY","PDFRenderer","createPDFRenderer","Rect","TextEngine","_container","computed","preprocessors","blocks","block","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","obj","transformText","engine","attributedString","preprocessor","counter","lineIndexAtHeight","transformation","dirty","path","Path","Container","AttributedString","fromFragments","trim","layoutEngine","linesCount","initialX","y","x","WIDOW_THREASHOLD","Text","setMeasureFunc","bind","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","MEASURE_MODE_AT_MOST","super","markDirty","linesQuantity","slicedLines","orphans","widows","sliceHeight","heightAtLineIndex","PROTOCOL_REGEXP","Link","SAFETY_HEIGHT","Image","measureImage","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","message","containerWidth","containerHeight","xOffset","createElement","instance","PDFDocument","autoFirstPage","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","domElement","oldProps","newProps","emptyObject","beforeChild","textInstance","oldText","newText","updatePayload","pdf","onRender","stream","pipe","BlobStream","on","blob","toBlob","renderToStream","createContainer","updateContainer","toBuffer","renderToFile","filePath","output","fs","createWriteStream","log"],"mappings":"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"}