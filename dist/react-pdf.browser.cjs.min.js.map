{"version":3,"file":"react-pdf.browser.cjs.min.js","sources":["../src/utils/styles.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/formatter.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/jpeg.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/elements/Base.js","../src/elements/SubPage.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/ignorableChars.js","../src/elements/TextEngine.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nconst Buffer = require('buffer/').Buffer;\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n    this.glyphs = {};\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    if (!this.glyphs[id]) {\n      this.glyphs[id] = this.src.font.characterToGlyph(id);\n    }\n\n    return {\n      id,\n      _font: this.src,\n      name: this.glyphs[id],\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fallbackFontInstance = null;\n    }\n\n    get fallbackFont() {\n      if (!this.fallbackFontInstance) {\n        this.fallbackFontInstance = new StandardFont('Helvetica');\n      }\n\n      return this.fallbackFontInstance;\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        let defaultFont;\n\n        if (typeof run.attributes.font === 'string') {\n          defaultFont = new StandardFont(run.attributes.font);\n        } else {\n          defaultFont = run.attributes.font;\n        }\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          let font = defaultFont;\n\n          // If the default font does not have a glyph\n          // and the fallback font does, we use it\n          if (\n            !defaultFont.hasGlyphForCodePoint(codePoint) &&\n            this.fallbackFont.hasGlyphForCodePoint(codePoint)\n          ) {\n            font = this.fallbackFont;\n          }\n\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, stretch, shrink) => ({\n  type: 'glue',\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\nimport linebreak from './linebreak';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst NO_BREAK_SPACE_DECIMAL = 160;\n\nconst getWords = glyphString => {\n  const words = [];\n  const { start } = glyphString;\n  let lastIndex = 0;\n\n  for (const { index } of glyphString) {\n    const codePoint = glyphString.codePointAtGlyphIndex(index);\n\n    // Not break words in no-break-spaces\n    if (codePoint === NO_BREAK_SPACE_DECIMAL) {\n      continue;\n    }\n\n    if (glyphString.isWhiteSpace(index - start)) {\n      const word = glyphString.slice(lastIndex, index - start);\n\n      if (word.length > 0) {\n        words.push(word);\n      }\n\n      lastIndex = index - start + 1;\n    }\n  }\n\n  if (lastIndex < glyphString.end) {\n    const word = glyphString.slice(\n      lastIndex,\n      glyphString.end - glyphString.start,\n    );\n    words.push(word);\n  }\n\n  return words;\n};\n\nconst h = new Hypher(english);\nconst hyphenateString = string => {\n  if (string.includes(SOFT_HYPHEN_HEX)) {\n    return string.split(SOFT_HYPHEN_HEX);\n  }\n\n  return h.hyphenate(string);\n};\n\nconst hyphenateWord = glyphString => {\n  const hyphenated = hyphenateString(glyphString.string);\n\n  let index = 0;\n  const parts = hyphenated.map(part => {\n    const res = glyphString.slice(index, index + part.length);\n    index += part.length;\n    return res;\n  });\n\n  return parts;\n};\n\nconst hyphenate = words => words.map(word => hyphenateWord(word));\n\nconst formatter = (measureText, textAlign, callback) => {\n  const spaceWidth = measureText(' ');\n  const hyphenWidth = measureText('-');\n  const hyphenPenalty = !textAlign || textAlign === 'justify' ? 100 : 600;\n  const opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9,\n  };\n\n  return glyphString => {\n    const nodes = [];\n    const words = getWords(glyphString);\n    const spaceStretch = spaceWidth * opts.width / opts.stretch;\n    const spaceShrink = spaceWidth * opts.width / opts.shrink;\n    const hyphenationCallback = callback || hyphenate;\n    const hyphenatedWords = hyphenationCallback(words, glyphString);\n\n    hyphenatedWords.forEach((word, index, array) => {\n      if (word.length > 1) {\n        word.forEach((part, partIndex, partArray) => {\n          const isLastPart = partIndex === word.length - 1;\n\n          nodes.push(linebreak.box(measureText(part), part, !isLastPart));\n\n          if (partIndex !== partArray.length - 1) {\n            nodes.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        });\n      } else {\n        nodes.push(linebreak.box(measureText(word[0]), word[0]));\n      }\n      if (index === array.length - 1) {\n        nodes.push(linebreak.glue(0, linebreak.infinity, 0));\n        nodes.push(linebreak.penalty(0, -linebreak.infinity, 1));\n      } else {\n        nodes.push(linebreak.glue(spaceWidth, spaceStretch, spaceShrink));\n      }\n    });\n\n    return nodes;\n  };\n};\n\nexport default formatter;\n","import createLinebreaker from '@textkit/linebreaker';\nimport formatter from './formatter';\nimport linebreak from './linebreak';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_LIMIT = 40;\n\nexport default ({ hyphenationCallback } = {}) => Textkit => {\n  const TextkitLinebreaker = createLinebreaker()(Textkit);\n  const fallbackLinebreaker = new TextkitLinebreaker();\n\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    suggestLineBreak(glyphString, width, paragraphStyle) {\n      let tolerance = this.tolerance;\n      const measuredWidth = this.measureWidth(glyphString);\n      const nodes = formatter(\n        measuredWidth,\n        paragraphStyle.align,\n        hyphenationCallback,\n      )(glyphString);\n      let breaks = [];\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        breaks = linebreak(nodes, [width], { tolerance });\n        tolerance += 2;\n      }\n\n      // Fallback to textkit default's linebreaking algorithm if K&P fails\n      if (breaks.length === 0) {\n        const fallback = fallbackLinebreaker.suggestLineBreak(\n          glyphString,\n          width,\n          paragraphStyle,\n        );\n        if (fallback) return fallback;\n\n        // If fallback didn't worked, we split workd based on width\n        const index = glyphString.glyphIndexAtOffset(width) - 1;\n        glyphString.insertGlyph(index, HYPHEN);\n        return { position: index + 1 };\n      }\n\n      if (!breaks[1]) {\n        return { position: glyphString.end };\n      }\n\n      const breakNode = this.findBreakNode(nodes, breaks[1].position);\n      const breakIndex = breakNode.value.end - glyphString.start;\n\n      if (breakNode.hyphenated) {\n        glyphString.insertGlyph(breakIndex, HYPHEN);\n        return { position: breakIndex + 1 };\n      }\n\n      // We kep the blank space at the end of the line to avoid justification issues\n      const offset = glyphString.isWhiteSpace(breakIndex) ? 1 : 0;\n      return { position: breakIndex + offset };\n    }\n\n    measureWidth(glyphString) {\n      const { font, fontSize } = glyphString.glyphRuns[0].attributes;\n\n      return word => {\n        if (typeof word === 'string') {\n          const scale = fontSize / font.unitsPerEm;\n          return font.layout(word).positions[0].xAdvance * scale;\n        }\n\n        return word.advanceWidth;\n      };\n    }\n\n    findBreakNode(nodes, position) {\n      let index = position - 1;\n\n      while (!nodes[index].value) {\n        index -= 1;\n      }\n\n      return nodes[index];\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport lineFragmentGenerator from '@textkit/line-fragment-generator';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      lineFragmentGenerator: lineFragmentGenerator(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      lineBreaker: lineBreaker({ hyphenationCallback }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport * from '@react-pdf/textkit-core';\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\n\nconst Buffer = require('buffer/').Buffer;\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nexport const fetchImage = src => {\n  if (typeof src === 'object') {\n    if (src.data && src.format) {\n      // Local file given\n      return new Promise((resolve, reject) =>\n        resolve(getImage(src.data, src.format)),\n      );\n    }\n    throw new Error(\n      `Invalid data given for local file: ${JSON.stringify(src)}`,\n    );\n  }\n\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => {\n      if (arrayBuffer.constructor.name === 'Buffer') {\n        return arrayBuffer;\n      }\n      return Buffer.from(arrayBuffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    })\n    .catch(() => {\n      throw new Error(`Couldn't fetch image: ${src}`);\n    });\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { fetchImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(fetchImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  get pageCount() {\n    return this.children.reduce((acc, page) => acc + page.subpagesCount, 0);\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    child.previousPage = this.children[this.children.length - 1];\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n\n    if (this.children[i + 1]) {\n      this.children[i + 1].previousPage = this.children[i].previousPage;\n    }\n\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) {\n      this.root.info.Title = title;\n    }\n    if (author) {\n      this.root.info.Author = author;\n    }\n    if (subject) {\n      this.root.info.Subject = subject;\n    }\n    if (keywords) {\n      this.root.info.Keywords = keywords;\n    }\n\n    this.root.info.Creator = creator || 'react-pdf';\n    this.root.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].applyProps();\n    }\n  }\n\n  async wrapChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].wrapPage();\n    }\n  }\n\n  async renderChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render();\n    }\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.wrapChildren();\n      await this.renderChildren();\n      this.root.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","import Yoga from 'yoga-layout';\n\nconst ALMOST_ZERO = 0.000001;\n\nclass Node {\n  constructor(root, props) {\n    this._top = null;\n    this._left = null;\n    this._width = null;\n    this._heigth = null;\n    this._padding = {};\n    this._margin = {};\n\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  get top() {\n    if (!this._top) {\n      this._top = this.layout.getComputedLayout().top - this.marginTop;\n    }\n\n    return this._top;\n  }\n\n  get left() {\n    if (!this._left) {\n      this._left = this.layout.getComputedLayout().left - this.marginLeft;\n    }\n\n    return this._left;\n  }\n\n  get width() {\n    if (!this._width) {\n      this._width =\n        this.layout.getComputedLayout().width +\n        this.marginLeft +\n        this.marginRight;\n    }\n\n    return this._width;\n  }\n\n  get height() {\n    if (!this._heigth) {\n      this._heigth =\n        this.layout.getComputedLayout().height +\n        this.marginTop +\n        this.marginBottom;\n    }\n\n    return this._heigth;\n  }\n\n  get paddingTop() {\n    if (!this._padding.top) {\n      this._padding.top = this.layout.getComputedPadding(Yoga.EDGE_TOP);\n    }\n\n    return this._padding.top;\n  }\n\n  get paddingRight() {\n    if (!this._padding.right) {\n      this._padding.right = this.layout.getComputedPadding(Yoga.EDGE_RIGHT);\n    }\n\n    return this._padding.right;\n  }\n\n  get paddingBottom() {\n    if (!this._padding.bottom) {\n      this._padding.bottom = this.layout.getComputedPadding(Yoga.EDGE_BOTTOM);\n    }\n\n    return this._padding.bottom;\n  }\n\n  get paddingLeft() {\n    if (!this._padding.left) {\n      this._padding.left = this.layout.getComputedPadding(Yoga.EDGE_LEFT);\n    }\n\n    return this._padding.left;\n  }\n\n  get marginTop() {\n    if (!this._margin.top) {\n      this._margin.top = this.layout.getComputedMargin(Yoga.EDGE_TOP);\n    }\n\n    return this._margin.top;\n  }\n\n  get marginRight() {\n    if (!this._margin.right) {\n      this._margin.right = this.layout.getComputedMargin(Yoga.EDGE_RIGHT);\n    }\n\n    return this._margin.right;\n  }\n\n  get marginBottom() {\n    if (!this._margin.bottom) {\n      this._margin.bottom = this.layout.getComputedMargin(Yoga.EDGE_BOTTOM);\n    }\n\n    return this._margin.bottom;\n  }\n\n  get marginLeft() {\n    if (!this._margin.left) {\n      this._margin.left = this.layout.getComputedMargin(Yoga.EDGE_LEFT);\n    }\n\n    return this._margin.left;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set top(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._top = value;\n  }\n\n  set left(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._left = value;\n  }\n\n  set width(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._width = value;\n  }\n\n  set height(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._heigth = value;\n  }\n\n  set paddingTop(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.top = value;\n  }\n\n  set paddingRight(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.right = value;\n  }\n\n  set paddingBottom(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.bottom = value;\n  }\n\n  set paddingLeft(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._padding.left = value;\n  }\n\n  set marginTop(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.top = value;\n  }\n\n  set marginRight(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.right = value;\n  }\n\n  set marginBottom(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.bottom = value;\n  }\n\n  set marginLeft(value) {\n    if (value === 0) {\n      value = ALMOST_ZERO;\n    }\n\n    this._margin.left = value;\n  }\n\n  set padding(value) {\n    this._padding = value;\n  }\n\n  set margin(value) {\n    this._margin = value;\n  }\n\n  reset() {\n    this.top = null;\n    this.left = null;\n    this.width = null;\n    this.height = null;\n    this.padding = {};\n    this.margin = {};\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","import yogaValue from './yogaValue';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value => value.match(/(\\d+)px?\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = style => {\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (typeof value === 'string' && key.match(/border/)) {\n      const match = matchBorderShorthand(value);\n\n      if (match) {\n        if (key.match(/.Color/)) {\n          resolvedStyle[key] = match[3];\n        } else if (key.match(/.Style/)) {\n          resolvedStyle[key] = match[2];\n        } else if (key.match(/.Width/)) {\n          resolvedStyle[key] = match[1];\n        } else {\n          throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n        }\n      } else {\n        resolvedStyle[key] = value;\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  return processBorders(expandStyles(style));\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null || style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) {\n    return null;\n  }\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n\n  return transformStyles(styles);\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debugText(layout) {\n    this.root.fontSize(4);\n    this.root.opacity(1);\n    this.root.fillColor('black');\n    this.root.text(\n      `${layout.width} x ${layout.height}`,\n      layout.left,\n      Math.max(layout.top - 4, 0),\n    );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.fillColor('#a1c6e7');\n    this.root.opacity(0.5);\n    this.root\n      .rect(\n        layout.left + padding.left + margin.left,\n        layout.top + padding.top + margin.top,\n        layout.width -\n          padding.left -\n          padding.right -\n          margin.left -\n          margin.right,\n        layout.height -\n          padding.top -\n          padding.bottom -\n          margin.top -\n          margin.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.fillColor('#c4deb9');\n    this.root.opacity(0.5);\n\n    // Padding top\n    this.root\n      .rect(\n        layout.left + margin.left + padding.left,\n        layout.top + margin.top,\n        layout.width -\n          padding.right -\n          padding.left -\n          margin.left -\n          margin.right,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top + margin.top,\n        padding.left,\n        layout.height - margin.top - margin.bottom,\n      )\n      .fill();\n\n    // Padding right\n    this.root\n      .rect(\n        layout.left + layout.width - padding.right - margin.right,\n        layout.top + margin.top,\n        padding.right,\n        layout.height - margin.top - margin.bottom,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root\n      .rect(\n        layout.left + padding.left + margin.left,\n        layout.top + layout.height - padding.bottom - margin.bottom,\n        layout.width -\n          padding.right -\n          padding.left -\n          margin.left -\n          margin.right,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.fillColor('#f8cca1');\n    this.root.opacity(0.5);\n\n    // Margin top\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top,\n        layout.width - margin.left - margin.right,\n        margin.top,\n      )\n      .fill();\n\n    // Margin left\n    this.root.rect(layout.left, layout.top, margin.left, layout.height).fill();\n\n    // Margin right\n    this.root\n      .rect(\n        layout.left + layout.width - margin.right,\n        layout.top,\n        margin.right,\n        layout.height,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root\n      .rect(\n        layout.left + margin.left,\n        layout.top + layout.height - margin.bottom,\n        layout.width - margin.left - margin.right,\n        margin.bottom,\n      )\n      .fill();\n  },\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout);\n\n    this.root.restore();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawBorders() {\n    const margin = this.margin;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + margin.left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + margin.top + borderTopWidth / 2,\n      ],\n      [\n        left +\n          width -\n          margin.right -\n          (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + margin.top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - margin.right - borderRightWidth / 2,\n        top +\n          margin.top +\n          (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - margin.right - borderRightWidth / 2,\n        top +\n          height -\n          margin.bottom -\n          (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          margin.right -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - margin.bottom - borderBottomWidth / 2,\n      ],\n      [\n        left +\n          margin.left +\n          (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - margin.bottom - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + margin.left + borderLeftWidth / 2,\n        top +\n          height -\n          margin.bottom -\n          (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + margin.left + borderLeftWidth / 2,\n        top + margin.top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.restore();\n  },\n};\n\nexport default Borders;\n","import Yoga from 'yoga-layout';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport upperFirst from 'lodash.upperfirst';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport { inheritedProperties } from '../utils/styles';\n\nconst PERCENT = /^(\\d+)?%$/g;\n\nclass Base extends Node {\n  static defaultProps = {\n    style: {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n    minPresenceAhead: 0,\n  };\n\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.parent = null;\n    this.children = [];\n\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n\n    this.layout = Yoga.Node.createDefault();\n    this.canBeSplitted = false;\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  moveTo(parent) {\n    this.reset();\n    this.parent.removeChild(this);\n    parent.appendChild(this);\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style =\n      this.style ||\n      StyleSheet.resolve(this.props.style, {\n        width: size[0],\n        height: size[1],\n        orientation: orientation,\n      });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseInt(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n        this.layout.setMargin(Yoga.EDGE_TOP, this.marginTop || value);\n        break;\n      case 'marginRight':\n        this.layout.setMargin(Yoga.EDGE_RIGHT, this.marginRight || value);\n        break;\n      case 'marginBottom':\n        this.layout.setMargin(Yoga.EDGE_BOTTOM, this.marginBottom || value);\n        break;\n      case 'marginLeft':\n        this.layout.setMargin(Yoga.EDGE_LEFT, this.marginLeft || value);\n        break;\n      case 'paddingTop':\n        this.layout.setPadding(Yoga.EDGE_TOP, this.paddingTop || value);\n        break;\n      case 'paddingRight':\n        this.layout.setPadding(Yoga.EDGE_RIGHT, this.paddingRight || value);\n        break;\n      case 'paddingBottom':\n        this.layout.setPadding(Yoga.EDGE_BOTTOM, this.paddingBottom || value);\n        break;\n      case 'paddingLeft':\n        this.layout.setPadding(Yoga.EDGE_LEFT, this.paddingLeft || value);\n        break;\n      case 'borderTopWidth':\n        this.layout.setBorder(Yoga.EDGE_TOP, value);\n        break;\n      case 'borderRightWidth':\n        this.layout.setBorder(Yoga.EDGE_RIGHT, value);\n        break;\n      case 'borderBottomWidth':\n        this.layout.setBorder(Yoga.EDGE_BOTTOM, value);\n        break;\n      case 'borderLeftWidth':\n        this.layout.setBorder(Yoga.EDGE_LEFT, value);\n        break;\n      case 'position':\n        this.layout.setPositionType(\n          value === 'absolute'\n            ? Yoga.POSITION_TYPE_ABSOLUTE\n            : Yoga.POSITION_TYPE_RELATIVE,\n        );\n        break;\n      case 'top':\n        this.setPosition(Yoga.EDGE_TOP, this.top || value);\n        break;\n      case 'right':\n        this.setPosition(Yoga.EDGE_RIGHT, this.right || value);\n        break;\n      case 'bottom':\n        this.setPosition(Yoga.EDGE_BOTTOM, this.bottom || value);\n        break;\n      case 'left':\n        this.setPosition(Yoga.EDGE_LEFT, this.left || value);\n        break;\n      case 'width':\n        this.setDimension(\n          attribute,\n          this[attribute] - this.marginLeft - this.marginRight || value,\n        );\n        break;\n      case 'height':\n        this.setDimension(\n          attribute,\n          this[attribute] - this.marginTop - this.marginBottom || value,\n        );\n        break;\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this.setDimension(attribute, value);\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  isAbsolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  recalculateLayout() {\n    this.children.forEach(child => child.recalculateLayout());\n  }\n\n  getAbsoluteLayout() {\n    const parentMargin = this.parent.margin || { left: 0, top: 0 };\n    const parentLayout = this.parent.getAbsoluteLayout\n      ? this.parent.getAbsoluteLayout()\n      : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentMargin.left + parentLayout.left,\n      top: this.top + parentMargin.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  getWidth() {\n    return (\n      this.layout.getComputedWidth() +\n      this.layout.getComputedMargin(Yoga.EDGE_LEFT) +\n      this.layout.getComputedMargin(Yoga.EDGE_RIGTH) -\n      this.layout.getComputedPadding(Yoga.EDGE_LEFT) -\n      this.layout.getComputedPadding(Yoga.EDGE_RIGTH)\n    );\n  }\n\n  getHeight() {\n    return (\n      this.layout.getComputedHeight() +\n      this.layout.getComputedMargin(Yoga.EDGE_TOP) +\n      this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) -\n      this.layout.getComputedPadding(Yoga.EDGE_TOP) -\n      this.layout.getComputedPadding(Yoga.EDGE_BOTTOM)\n    );\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const margin = this.margin;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root\n        .fillColor(styles.backgroundColor)\n        .roundedRect(\n          left + margin.left,\n          top + margin.top,\n          width - margin.left - margin.right,\n          height - margin.top - margin.bottom,\n          borderRadius,\n        )\n        .fill();\n    }\n  }\n\n  wrapHeight(height) {\n    return Math.min(height, this.height);\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.width = this.width;\n    clone.style = this.style;\n    clone.parent = this.parent;\n    clone.height = this.height;\n    clone.margin = this.margin;\n    clone.padding = this.padding;\n\n    return clone;\n  }\n\n  async renderChildren(page) {\n    const absoluteChilds = this.children.filter(child => child.isAbsolute());\n    const nonAbsoluteChilds = this.children.filter(\n      child => !child.isAbsolute(),\n    );\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render(page);\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render(page);\n    }\n  }\n}\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\n\nexport default Base;\n","import warning from 'fbjs/lib/warning';\nimport Base from './Base';\n\nclass SubPage extends Base {\n  constructor(root, props, number) {\n    super(root, props);\n\n    this._number = number;\n  }\n\n  get name() {\n    return 'SubPage';\n  }\n\n  get page() {\n    return this.parent;\n  }\n\n  get size() {\n    return this.parent.size;\n  }\n\n  get style() {\n    return this.parent.style;\n  }\n\n  set style(style) {\n    return style;\n  }\n\n  get number() {\n    return this._number + this.page.numberOffset;\n  }\n\n  resetMargins() {\n    if (\n      !!this.style.marginTop ||\n      !!this.style.marginBottom ||\n      !!this.style.marginLeft ||\n      !!this.style.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.style.marginTop = 0;\n      this.style.marginBottom = 0;\n      this.style.marginLeft = 0;\n      this.style.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.resetMargins();\n\n    if (this.props.size) {\n      const size = this.size;\n\n      if (this.props.orientation === 'landscape') {\n        this.layout.setWidth(size[1]);\n        this.layout.setHeight(size[0]);\n      } else {\n        this.layout.setWidth(size[0]);\n        this.layout.setHeight(size[1]);\n      }\n    }\n  }\n\n  recalculateLayout() {\n    super.recalculateLayout();\n    this.layout.calculateLayout();\n  }\n\n  isEmpty() {\n    const nonFixedChilds = this.children.filter(child => !child.props.fixed);\n    if (nonFixedChilds.length === 0) {\n      return true;\n    }\n\n    return nonFixedChilds.every(child => child.isEmpty());\n  }\n\n  wrap(height) {\n    this.layout.calculateLayout();\n\n    const nextPageElements = [];\n    const result = this.clone();\n\n    result._number = this._number + 1;\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      const { fixed, wrap, minPresenceAhead } = child.props;\n\n      const isElementOutside = height < child.top;\n      const childBottom = child.top + child.height - this.paddingTop;\n      const shouldElementSplit = height < childBottom;\n\n      if (fixed) {\n        const fixedElement = child.clone();\n        fixedElement.children = child.children;\n        result.appendChild(fixedElement);\n      } else if (isElementOutside) {\n        nextPageElements.push(child);\n      } else if (child.props.break) {\n        child.props.break = false;\n        nextPageElements.push(...this.children.slice(i));\n        break;\n      } else if (minPresenceAhead) {\n        let childIndex = 1;\n        let presenceAhead = 0;\n        let nextChild = this.children[i + childIndex];\n        let isElementInside = height > nextChild.top;\n\n        while (nextChild && isElementInside) {\n          isElementInside = height > nextChild.top;\n          presenceAhead += nextChild.wrapHeight(\n            height - nextChild.top - this.marginTop,\n          );\n          nextChild = this.children[i + childIndex++];\n        }\n\n        if (presenceAhead < minPresenceAhead) {\n          nextPageElements.push(...this.children.slice(i));\n          break;\n        }\n      } else if (shouldElementSplit) {\n        const remainingHeight = height - child.top + this.paddingTop;\n\n        if (!wrap) {\n          nextPageElements.push(child);\n        } else {\n          result.appendChild(child.splice(remainingHeight, height));\n        }\n      }\n    }\n\n    nextPageElements.forEach(child => child.moveTo(result));\n    result.applyProps();\n\n    return result;\n  }\n\n  callChildFunctions() {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const { pageCount } = this.page.document;\n\n      if (node.renderCallback) {\n        const callResult = node.renderCallback({\n          totalPages: pageCount,\n          pageNumber: this.number,\n        });\n\n        node.renderCallback = null;\n        node.children = [callResult];\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  layoutFixedElements() {\n    this.reset();\n    this.recalculateLayout();\n\n    this.children.forEach(child => {\n      if (child.props.fixed) {\n        child.reset();\n      }\n    });\n  }\n\n  async render(page) {\n    this.root.addPage({\n      size: this.size,\n      layout: this.props.orientation,\n      margin: 0,\n    });\n\n    this.callChildFunctions();\n    this.layoutFixedElements();\n\n    if (this.style.backgroundColor) {\n      this.root\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.root.page.width, this.root.page.height)\n        .fill();\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    await this.renderChildren(page);\n\n    this.page.renderRuler();\n  }\n}\n\nexport default SubPage;\n","export default {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    this.root\n      .save()\n      .lineWidth(LINE_WIDTH)\n      .fontSize(RULER_FONT_SIZE)\n      .opacity(1);\n\n    if (this.hasHorizontalRuler()) {\n      this.drawHorizontalRuler();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.drawVerticalRuler();\n    }\n\n    if (this.hasHorizontalRuler() && this.hasVerticalRuler()) {\n      this.root\n        .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n        .fill(RULER_COLOR);\n    }\n\n    this.root.restore();\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import SubPage from './SubPage';\nimport StyleSheet from '../stylesheet';\nimport sizes from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\n\nclass Page {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: false,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.parent = null;\n    this.props = { ...Page.defaultProps, ...props };\n    this.previousPage = null;\n    this.children = [];\n    this._size = null;\n\n    this.addInitialSubpage();\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get initialSubpage() {\n    return this.children[0];\n  }\n\n  get subpagesCount() {\n    return this.children.length;\n  }\n\n  get numberOffset() {\n    let result = 0;\n    let page = this.previousPage;\n\n    while (page) {\n      result += page.subpagesCount;\n      page = page.previousPage;\n    }\n\n    return result;\n  }\n\n  get width() {\n    return this.size[0];\n  }\n\n  get height() {\n    return this.size[1];\n  }\n\n  get padding() {\n    return {\n      top: this.style.paddingTop || 0,\n      right: this.style.paddingRight || 0,\n      bottom: this.style.paddingBottom || 0,\n      left: this.style.paddingLeft || 0,\n    };\n  }\n\n  get size() {\n    if (this._size) {\n      return this._size;\n    }\n\n    const { size } = this.props;\n\n    // Calculate size\n    if (typeof size === 'string') {\n      this._size = sizes[size.toUpperCase()];\n    } else if (Array.isArray(size)) {\n      this._size = size;\n    } else if (typeof size === 'object' && size.width && size.height) {\n      this._size = [size.width, size.height];\n    } else {\n      throw new Error(`Invalid Page size: ${size}`);\n    }\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size[0] += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size[1] += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  applyProps() {\n    this.style = StyleSheet.resolve(this.props.style);\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n    const { paddingTop = 0, paddingLeft = 0 } = this.style;\n\n    if (this.hasHorizontalRuler()) {\n      this.style.paddingTop = paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.style.paddingLeft = paddingLeft + rulerWidth;\n    }\n\n    // Apply props to page childrens\n    for (let i = 0; i < this.children.length; i++) {\n      this.children[i].applyProps();\n    }\n  }\n\n  addInitialSubpage() {\n    const newSubpage = new SubPage(this.root, this.props, 1);\n    newSubpage.parent = this;\n\n    this.children.push(newSubpage);\n  }\n\n  appendChild(child) {\n    this.children[0].appendChild(child);\n  }\n\n  removeChild(child) {\n    this.children[0].removeChild(child);\n  }\n\n  async wrapPage() {\n    const { paddingTop = 0, paddingBottom = 0 } = this.style;\n    const height = this.height - paddingTop - paddingBottom;\n    let nextSubpage = this.initialSubpage.wrap(height);\n\n    while (this.props.wrap && !nextSubpage.isEmpty()) {\n      this.children.push(nextSubpage);\n      nextSubpage = nextSubpage.wrap(height);\n    }\n  }\n\n  async render() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render(this);\n    }\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  isEmpty() {\n    if (this.children.length === 0) {\n      return false;\n    }\n\n    return this.children.every(child => child.isEmpty());\n  }\n\n  wrapHeight(height) {\n    const { wrap } = this.props;\n\n    if (!wrap && height < this.height) {\n      return 0;\n    }\n\n    let result = 0;\n    for (let i = 0; i < this.children.length; i++) {\n      if (this.children.height > height) {\n        break;\n      }\n\n      result += this.children.height;\n    }\n    return result;\n  }\n\n  splice(wrapHeight, pageHeight) {\n    const nextViewElements = [];\n    const result = this.clone();\n\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      const { fixed, wrap, minPresenceAhead } = child.props;\n      const isElementOutside = wrapHeight < child.top;\n      const shouldElementSplit = wrapHeight < child.top + child.height;\n\n      if (isElementOutside) {\n        nextViewElements.push(child);\n      } else if (fixed) {\n        const fixedElement = child.clone();\n        fixedElement.children = child.children;\n        result.appendChild(fixedElement);\n      } else if (child.props.break) {\n        child.props.break = false;\n        nextViewElements.push(...this.children.slice(i));\n        break;\n      } else if (minPresenceAhead) {\n        let childIndex = 1;\n        let presenceAhead = 0;\n        let nextChild = this.children[i + childIndex];\n        let isElementInside = wrapHeight > nextChild.top;\n\n        while (nextChild && isElementInside) {\n          isElementInside = wrapHeight > nextChild.top;\n          presenceAhead += nextChild.wrapHeight(\n            wrapHeight - nextChild.top - this.marginTop,\n          );\n          nextChild = this.children[i + childIndex++];\n        }\n\n        if (presenceAhead < minPresenceAhead) {\n          nextViewElements.push(...this.children.slice(i));\n          break;\n        }\n      } else if (shouldElementSplit) {\n        const remainingHeight = wrapHeight - child.top - this.marginTop;\n\n        if (!wrap) {\n          nextViewElements.push(child);\n        } else {\n          result.appendChild(child.splice(remainingHeight, pageHeight));\n        }\n      }\n    }\n\n    nextViewElements.forEach(child => child.moveTo(result));\n\n    // If the View has fixed height, we calculate the new element heights.\n    // If not, we set it up as NaN and use Yoga calculated heights as fallback.\n    const h = this.style.height ? wrapHeight : NaN;\n\n    result.marginTop = 0;\n    result.paddingTop = 0;\n    result.height = this.height - h;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.height = h;\n\n    return result;\n  }\n\n  async render(page) {\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    await this.renderChildren(page);\n  }\n}\n\nexport default View;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import warning from 'fbjs/lib/warning';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport upperFirst from 'lodash.upperfirst';\nimport { embedEmojis } from '../utils/emoji';\nimport { ignoreChars } from '../utils/ignorableChars';\nimport Font from '../font';\nimport {\n  Rect,\n  Path,\n  LayoutEngine,\n  AttributedString,\n  Container,\n} from '../layout';\n\n// Global layout engine\n// It's created dynamically because it may accept a custom hyphenation callback\nlet LAYOUT_ENGINE;\nconst INFINITY = 99999;\n\n// TODO: Import and pass Textkit as a whole\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass TextEngine {\n  constructor(element) {\n    this.element = element;\n    this._container = null;\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this.preprocessors = [ignoreChars, embedEmojis];\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get layoutEngine() {\n    if (!LAYOUT_ENGINE) {\n      LAYOUT_ENGINE = new LayoutEngine({\n        hyphenationCallback: Font.getHyphenationCallback(),\n      });\n    }\n\n    return LAYOUT_ENGINE;\n  }\n\n  get lines() {\n    if (!this.container) {\n      return [];\n    }\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get height() {\n    if (!this._container) {\n      return -1;\n    }\n\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get width() {\n    if (!this._container) {\n      return -1;\n    }\n\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get attributedString() {\n    let fragments = [];\n    const {\n      color = 'black',\n      fontFamily = 'Helvetica',\n      fontSize = 18,\n      textAlign = 'left',\n      position,\n      top,\n      bottom,\n      align,\n      lineHeight,\n      textDecoration,\n      textDecorationColor,\n      textDecorationStyle,\n      textTransform,\n    } = this.element.getComputedStyles();\n\n    warning(\n      !align,\n      '\"align\" style prop will be deprecated on future versions. Please use \"textAlign\" instead in Text node',\n    );\n\n    this.element.children.forEach(child => {\n      if (typeof child === 'string') {\n        const obj = Font.getFont(fontFamily);\n        const font = obj ? obj.data : fontFamily;\n        const string = this.transformText(child, textTransform);\n\n        fragments.push({\n          string,\n          attributes: {\n            font,\n            color,\n            fontSize,\n            align: textAlign,\n            link: this.element.src,\n            underlineStyle: textDecorationStyle,\n            underline: textDecoration === 'underline',\n            underlineColor: textDecorationColor || color,\n            lineHeight: lineHeight ? lineHeight * fontSize : null,\n            yOffset: position === 'relative' ? -top || bottom || 0 : null,\n          },\n        });\n      } else {\n        if (child.engine) {\n          fragments.push(...child.engine.attributedString);\n        }\n      }\n    });\n\n    for (const preprocessor of this.preprocessors) {\n      fragments = preprocessor(fragments);\n    }\n\n    return fragments;\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i <= index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  splice(height) {\n    const result = this.clone();\n    const index = this.lineIndexAtHeight(height);\n\n    result.start = index;\n    result.end = this.end;\n    this.end = index;\n\n    return result;\n  }\n\n  clone() {\n    const result = new TextEngine(this.element);\n    result.computed = this.computed;\n    result._container = this._container;\n    return result;\n  }\n\n  transformText(text, transformation) {\n    switch (transformation) {\n      case 'uppercase':\n        return text.toUpperCase();\n      case 'lowercase':\n        return text.toLowerCase();\n      case 'capitalize':\n        return upperFirst(text);\n      default:\n        return text;\n    }\n  }\n\n  layout(width, dirty) {\n    if (this.computed) return;\n    const path = new Path().rect(0, 0, width, INFINITY);\n    const container = new Container(path);\n    const string = AttributedString.fromFragments(this.attributedString).trim();\n\n    // Do the actual text layout\n    this.layoutEngine.layout(string, [container]);\n\n    // Get the total amount of rendered lines\n    const linesCount = container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this._container = container;\n    this.end = linesCount + 1;\n  }\n\n  render() {\n    const margin = this.element.margin;\n    const padding = this.element.padding;\n    const { top, left } = this.element.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + margin.left + padding.left;\n      line.rect.y += top + margin.top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.element.root, {\n      outlineLines: false,\n    });\n    renderer.render(this.container);\n  }\n}\n\nexport default TextEngine;\n","import Yoga from 'yoga-layout';\nimport Base from './Base';\nimport TextEngine from './TextEngine';\n\nconst WIDOW_THREASHOLD = 20;\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.engine = new TextEngine(this);\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n    this.renderCallback = props.render;\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return null;\n  }\n\n  appendChild(child) {\n    if (typeof child === 'string') {\n      this.children.push(child);\n    } else {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    this.children = null;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    // If the text has functions inside, we don't measure dimentions right away,\n    // but we keep this until all functions are resolved after the layout stage.\n    if (this.renderCallback) {\n      return {};\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.engine.layout(width);\n\n      return {\n        height: this.style.flexGrow ? NaN : this.engine.height,\n      };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.engine.layout(width);\n\n      return {\n        height: this.engine.height,\n        width: Math.min(width, this.engine.width),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // For Text, we also inherit relative positioning because this is how\n    // we define text yOffset, which should be applied for inline childs also\n    if (\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    return styles;\n  }\n\n  recalculateLayout() {\n    this.layout.markDirty();\n  }\n\n  isEmpty() {\n    return this.engine.lines.length === 0;\n  }\n\n  hasOrphans(linesQuantity, slicedLines) {\n    return slicedLines === 1 && linesQuantity !== 1;\n  }\n\n  hasWidows(linesQuantity, slicedLines) {\n    return (\n      linesQuantity !== 1 &&\n      linesQuantity - slicedLines === 1 &&\n      linesQuantity < WIDOW_THREASHOLD\n    );\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.engine.lines.length;\n    const sliceHeight = height - this.marginTop - this.paddingTop;\n    const slicedLines = this.engine.lineIndexAtHeight(sliceHeight);\n\n    let wrapHeight = height;\n\n    if (linesQuantity < orphans) {\n      wrapHeight = height;\n    } else if (slicedLines < orphans || linesQuantity < orphans + widows) {\n      wrapHeight = 0;\n    } else if (linesQuantity === orphans + widows) {\n      wrapHeight = this.engine.heightAtLineIndex(orphans - 1);\n    } else if (linesQuantity - slicedLines < widows) {\n      wrapHeight = height - this.engine.heightAtLineIndex(widows - 1);\n    }\n\n    return Math.min(wrapHeight, this.height);\n  }\n\n  splice(height) {\n    const wrapHeight = this.wrapHeight(height);\n    const engine = this.engine.splice(wrapHeight);\n    const result = this.clone();\n\n    result.marginTop = 0;\n    result.paddingTop = 0;\n    result.width = this.width;\n    result.marginBottom = this.marginBottom;\n    result.engine = engine;\n    result.engine.element = result;\n    result.height = engine.height + this.paddingBottom + this.marginBottom;\n\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.height = height;\n\n    return result;\n  }\n\n  async render(page) {\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.engine.computed) {\n      this.engine.layout(\n        this.width -\n          this.margin.left -\n          this.margin.right -\n          this.padding.left -\n          this.padding.right,\n      );\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.engine.render();\n  }\n}\n\nexport default Text;\n","import Text from './Text';\n\nconst PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nclass Link extends Text {\n  static defaultProps = {\n    style: {\n      color: 'blue',\n      textDecoration: 'underline',\n    },\n  };\n\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    let { src } = this.props;\n\n    if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n      src = `http://${src}`;\n    }\n\n    return src;\n  }\n}\n\nexport default Link;\n","import Yoga from 'yoga-layout';\nimport Base from './Base';\nimport { fetchImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  isEmpty() {\n    return false;\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await fetchImage(this.props.src);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  async render() {\n    const margin = this.margin;\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const containerWidth = this.width - margin.right - margin.left;\n      const containerHeight = this.height - margin.top - margin.bottom;\n      const imageWidth = Math.min(containerHeight * this.ratio, containerWidth);\n      const xOffset = Math.max((containerWidth - imageWidth) / 2, 0);\n\n      this.root.image(\n        this.image.data,\n        left + padding.left + margin.left + xOffset,\n        top + padding.top + margin.top,\n        {\n          width: imageWidth - padding.left - padding.right,\n          height: containerHeight - padding.top - padding.bottom,\n        },\n      );\n    }\n  }\n}\n\nexport default Image;\n","import PDFDocument from '@react-pdf/pdfkit';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Image from './Image';\n\nfunction createElement(type, props, root) {\n  let instance;\n\n  switch (type) {\n    case 'ROOT':\n      instance = new PDFDocument({ autoFirstPage: false });\n      break;\n    case 'DOCUMENT':\n      instance = new Document(root, props);\n      break;\n    case 'PAGE':\n      instance = new Page(root, props);\n      break;\n    case 'TEXT':\n      instance = new Text(root, props);\n      break;\n    case 'LINK':\n      instance = new Link(root, props);\n      break;\n    case 'IMAGE':\n      instance = new Image(root, props);\n      break;\n    case 'VIEW':\n      instance = new View(root, props);\n      break;\n    default:\n      instance = undefined;\n  }\n\n  return instance;\n}\n\nexport { createElement };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createElement } from './elements';\n\nconst PDFRenderer = ReactFiberReconciler({\n  appendInitialChild(parentInstance, child) {\n    if (parentInstance.appendChild) {\n      parentInstance.appendChild(child);\n    } else {\n      parentInstance.document = child;\n    }\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    return createElement(type, props, internalInstanceHandle);\n  },\n\n  createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n    return text;\n  },\n\n  finalizeInitialChildren(domElement, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(domElement, type, oldProps, newProps) {\n    return true;\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(domElement) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: () => {},\n\n  useSyncScheduling: true,\n\n  mutation: {\n    appendChild(parentInstance, child) {\n      if (parentInstance.appendChild) {\n        parentInstance.appendChild(child);\n      } else {\n        parentInstance.document = child;\n      }\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.appendChild) {\n        parentInstance.appendChild(child);\n      } else {\n        parentInstance.document = child;\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      // noob\n    },\n\n    insertInContainerBefore(parentInstance, child, beforeChild) {\n      // noob\n    },\n\n    removeChild(parentInstance, child) {\n      parentInstance.removeChild(child);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      if (parentInstance.removeChild) {\n        parentInstance.removeChild(child);\n      }\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance = newText;\n    },\n\n    commitMount(instance, type, newProps) {\n      // Noop\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      // noop\n    },\n  },\n});\n\nexport default PDFRenderer;\n","import PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createElement } from './elements';\nimport Font from './font';\nimport BlobStream from 'blob-stream';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  async function toBlob() {\n    await input.document.render();\n\n    const stream = input.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        const blob = stream.toBlob('application/pdf');\n\n        if (input.document.props.onRender) {\n          input.document.props.onRender({ blob });\n        }\n\n        resolve(blob);\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    await input.document.render();\n\n    if (input.document.props.onRender) {\n      input.document.props.onRender();\n    }\n\n    return input;\n  }\n\n  async function toString() {\n    let result = '';\n    const render = input.document.render();\n\n    return new Promise(resolve => {\n      render.on('data', function(buffer) {\n        result += buffer;\n      });\n\n      render.on('end', function() {\n        if (input.document.props.onRender) {\n          input.document.props.onRender({ string: result });\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n  return {\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  Document,\n  StyleSheet,\n  createElement,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  StyleSheet,\n  PDFRenderer,\n  createElement,\n  Document as Container,\n} from './index';\n\nexport class Document extends Component {\n  container = createElement('ROOT');\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      document: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.mountNode = PDFRenderer.createContainer(this.container);\n\n    // Omit some props\n    const { height, width, children, ...props } = this.props;\n\n    PDFRenderer.updateContainer(\n      <Container {...props}>{this.props.children}</Container>,\n      this.mountNode,\n      this,\n    );\n\n    pdf(this.container)\n      .toBlob()\n      .then(blob => {\n        if (navigator.msSaveOrOpenBlob) {\n          navigator.msSaveOrOpenBlob(blob, 'print.pdf');\n        } else {\n          this.embed.href = URL.createObjectURL(blob);\n        }\n      });\n  }\n\n  componentDidUpdate() {\n    // Omit some props\n    const { height, width, children, ...props } = this.props;\n\n    PDFRenderer.updateContainer(\n      <Container {...props}>{this.props.children}</Container>,\n      this.mountNode,\n      this,\n    );\n  }\n\n  componentWillUnmount() {\n    PDFRenderer.updateContainer(null, this.mountNode, this);\n  }\n\n  render() {\n    const { className, width = null, height = null, style } = this.props;\n\n    return (\n      <iframe\n        className={className}\n        ref={container => {\n          this.embed = container;\n        }}\n        style={\n          Array.isArray(style)\n            ? { width, height, ...flatStyles(style) }\n            : { width, height, ...style }\n        }\n      />\n    );\n  }\n}\n\nDocument.displayName = 'Document';\nDocument.defaultProps = { style: {} };\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  StyleSheet,\n  PDFRenderer,\n  createElement,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Image,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createElement,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","fetchFont","fetch","src","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","hyphenationCallback","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","font","data","loading","isUrl","fontkit","create","openSync","loaded","registerFont","standardFonts","includes","Error","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","open","glyphs","layout","str","this","encode","encoded","positions","map","_","i","g","glyph","_this","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fallbackFontInstance","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","fallbackFont","Node","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","box","value","SOFT_HYPHEN_HEX","NO_BREAK_SPACE_DECIMAL","getWords","words","glyphString","codePointAtGlyphIndex","isWhiteSpace","word","h","Hypher","english","hyphenateString","split","hyphenate","hyphenateWord","part","formatter","measureText","textAlign","spaceWidth","hyphenWidth","hyphenPenalty","opts","spaceStretch","spaceShrink","array","partIndex","partArray","isLastPart","HYPHEN","TOLERANCE_LIMIT","fallbackLinebreaker","createLinebreaker","Textkit","suggestLineBreak","paragraphStyle","measuredWidth","measureWidth","align","fallback","glyphIndexAtOffset","insertGlyph","breakNode","findBreakNode","breakIndex","hyphenated","glyphRuns","fontSize","scale","unitsPerEm","xAdvance","shrinkWhitespaceFactor","before","after","LayoutEngine","engines","scriptItemizer","textDecorationEngine","lineFragmentGenerator","fontSubstitutionEngine","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","MARKERS","JPEG","height","readUInt16BE","marker","pos","require","getImage","body","extension","toLowerCase","PNG","fetchImage","resolve","reject","_JSON$stringify","constructor","isPng","isJpg","catch","emojis","regex","emojiRegex","reflect","promise","v","e","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","Font","emoji","fetchEmojis","promises","match","emojiUrl","image","exec","embedEmojis","fragments","fragment","emojiSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","appendChild","child","parent","previousPage","removeChild","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","_Promise","all","loadEmojis","loadImages","loadAssets","applyProps","wrapChildren","wrapPage","renderChildren","render","page","subpagesCount","defaultProps","ALMOST_ZERO","_top","_left","_width","_heigth","_padding","_margin","Yoga","createDefault","top","left","padding","margin","getComputedLayout","marginTop","marginLeft","marginRight","marginBottom","getComputedPadding","EDGE_TOP","right","EDGE_RIGHT","bottom","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","paddingTop","paddingRight","paddingBottom","paddingLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","key","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","styles","flatten","Array","isArray","input","resolveMediaQueries","container","test","matchMedia","absoluteFillObject","Debug","opacity","fillColor","text","max","rect","fill","getAbsoluteLayout","save","debugContent","debugPadding","debugMargin","debugText","restore","Borders","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","getComputedStyles","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","drawHorizontalBorder","drawVerticalBorder","PERCENT","Base","_Node","merge","canBeSplitted","insertChild","getChildCount","splice","orientation","StyleSheet","attribute","applyStyle","setDimension","attr","fixedMethod","upperFirst","percentMethod","isPercent","setPosition","edge","setPositionPercent","setter","setMargin","setPadding","setBorder","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","isFunction","isAbsolute","recalculateLayout","parentMargin","parentLayout","getWidth","getComputedWidth","EDGE_RIGTH","getHeight","getComputedHeight","element","inheritedStyles","pick","drawBackgroundColor","borderRadius","backgroundColor","roundedRect","wrapHeight","min","clone","filter","nonAbsoluteChilds","absoluteChilds","_Object$assign","SubPage","number","_Base","_number","resetMargins","setWidth","setHeight","calculateLayout","nonFixedChilds","fixed","every","wrap","nextPageElements","minPresenceAhead","isElementOutside","shouldElementSplit","fixedElement","break","childIndex","presenceAhead","nextChild","isElementInside","remainingHeight","callChildFunctions","pageCount","document","renderCallback","callResult","layoutFixedElements","addPage","debug","renderRuler","numberOffset","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","parseFloat","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","round","vRange","getVerticalSteps","_this2","Page","_size","addInitialSubpage","rulerWidth","getRulerWidth","newSubpage","initialSubpage","nextSubpage","sizes","toUpperCase","View","pageHeight","nextViewElements","NaN","drawBorders","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","LAYOUT_ENGINE","INFINITY","PDFRenderer","createPDFRenderer","Rect","TextEngine","_container","computed","preprocessors","lineIndexAtHeight","counter","heightAtLineIndex","transformText","transformation","dirty","path","Path","Container","AttributedString","fromFragments","attributedString","trim","layoutEngine","linesCount","blocks","block","initialX","y","x","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","obj","engine","WIDOW_THREASHOLD","Text","setMeasureFunc","bind","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","MEASURE_MODE_AT_MOST","markDirty","hasOrphans","linesQuantity","slicedLines","hasWidows","orphans","widows","sliceHeight","PROTOCOL_REGEXP","Link","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","_context","message","containerHeight","containerWidth","xOffset","createElement","instance","PDFDocument","autoFirstPage","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","domElement","oldProps","newProps","emptyObject","beforeChild","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","on","blob","stream","toBlob","onRender","_Component","state","componentDidMount","mountNode","createContainer","updateContainer","React","navigator","msSaveOrOpenBlob","embed","href","URL","createObjectURL","componentDidUpdate","componentWillUnmount","className","Component","displayName"],"mappings":"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"}